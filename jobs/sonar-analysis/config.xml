<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>pipeline {
    agent any
    
    tools {
        maven &apos;maven3&apos;
        jdk &apos;jdk17&apos;
    }
    
    environment {
        SCANNER_HOME= tool &apos;sonar-scanner&apos;
    }

    stages {
        stage(&apos;Git Checkout&apos;) {
            steps {
               
                git &apos;https://github.com/jaiswaladi2468/BoardgameListingWebApp.git&apos;
            }
        }
        
        stage(&apos;Compile&apos;) {
            steps {
                sh &quot;mvn compile&quot;
            }
        }
        
        stage(&apos;Test&apos;) {
            steps {
                sh &quot;mvn test&quot;
            }
        }
        
        stage(&apos;SonarQube&apos;) {
            steps {
                withSonarQubeEnv(&apos;sonar-1&apos;) {
                    sh &apos;&apos;&apos; $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Boardgame -Dsonar.projectKey=Boardgame \
                    -Dsonar.branch.name=pre-master -Dsonar.java.binaries=target/classes &apos;&apos;&apos;
                }
            }
        }
        
        stage(&apos;Quality Gate Check&apos;) {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: &apos;new-sonar-token&apos;
                }
            }
        }
        
        stage(&apos;Build&apos;) {
            steps {
                sh &quot;mvn package&quot;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>